@{
    ViewData["Title"] = "Home Page";
}

@inject IOptions<AmazonPayCredentials> AmazonPayCredentials

<nav class="navbar navbar-default">
    <div class="container-fluid">
        <div class="navbar-header">
            <a class="navbar-brand start-over" href="#">Amazon Pay PHP SDK Sample: One-Time Payment Checkout</a>
        </div>
        <div id="navbar" class="navbar-collapse collapse">
            <ul class="nav navbar-nav navbar-right">
                <li><a class="start-over" href="#">Logout and Start Over</a></li>
            </ul>
        </div>
    </div>
</nav>

<div class="jumbotron jumbotroncolor" style="padding-top:25px;" id="api-content">
    <div id="section-content">

        <h2>Confirm</h2>
        <p>
            At this point we will make the <em>Confirm</em> API call to confirm the order
            reference and a subsequent <em>Authorize</em> and <em>Capture</em> API call.
            If you used a test account associated with your email address you should receive an email.
        </p>

    </div>
</div>

<div class="jumbotron jumbotroncodecolor" style="padding-top:25px;" id="api-calls">
    <h3>Confirm Response</h3>
    <p>The <em>Confirm</em> API call does not return any special values. If it were unsuccessful you would see an error response.</p>
    <pre id="confirm"><code class="json"></code></pre>

    <h3>Authorize Response</h3>
    <div id="result"></div>
    <pre id="authorize"><div class="text-center"></div></pre>


    <p>
        The <em>Authorize</em> API call will authorize the order reference. Instead
        of making a separate <em>Capture</em> API call we can set the <strong>capture_now</strong>
        parameter to <strong>true</strong> and the funds will be captured in the same call.
    </p>

</div>

@section scripts {
    <script type="text/javascript" src="https://code.jquery.com/jquery-1.11.2.min.js"></script>
    <script type='text/javascript'>
        window.onAmazonPaymentsReady = function () {

            $(document).ready(function () {
                $('.start-over').on('click', function () {
                    amazon.Login.logout();
                    document.cookie = "amazon_Login_accessToken=; expires=Thu, 01 Jan 1970 00:00:00 GMT";
                    window.location = '/';
                });
            });
        };

        var authorizeResponse;
        var confirmResponse;
        $.post("/home/ConfirmAndAuthorize", {}).done(function (data) {
            try {
                console.log(data);
                
                if (data.ConfirmResponse) {
                    var str = JSON.stringify(data.ConfirmResponse, null, 2);
                    console.log("confirm" + str);

                    $("#confirm").html(str);
                } else if (data.AuthorizeResponse) {
                    var str = JSON.stringify(data.AuthorizeResponse, null, 2);
                    console.log("authorize" + str);
                    $("#authorize").html(str);
                }
                
                // Normally, you would do these decline checks on the back-end instead of in the browser

                if (data.ConfirmResponse) {
                    console.log(data.ConfirmResponse);
                    if (data.ConfirmResponse.Error) {
                        $("#result").html("<font color='red'><strong>Confirm API call failed (see reason above)</strong></font>");
                    }
                }

                if (data.AuthorizeResponse) {
                    if (data.AuthorizeResponse.AuthorizeResult.AuthorizationDetails.AuthorizationStatus.State === "Declined") {
                        $("#result").html("<font color='red'><strong>The authorization was Declined with Reason Code "
                            + data.AuthorizeRespons.AuthorizeResult.AuthorizationDetails.AuthorizationStatus.ReasonCode + "</strong></font>");
                    }
                }

            } catch (err) {
                $("#confirm").html(JSON.stringify(data, null, 2));
                console.log(data);
                console.log(err);
            }

        });
    </script>
    @await Html.PartialAsync("_AmazonPaymentScriptPartial")

}